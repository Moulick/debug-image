name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - develop
  pull_request:
    # The branches below must be a subset of the branches above
    branches:
      - main
      - develop
  # schedule:
  #   - cron: "0 9 * * *" # Every day at 9am UTC
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY_IMAGE: docker.io/moulick/debug-image,ghcr.io/moulick/debug-image

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - platform: linux/amd64
            runner: ubuntu-24.04
            slug: linux-amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            slug: linux-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          # push: true
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform.slug }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v5
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=pr,prefix=pr-,suffix=-{{sha}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          for registry in ${{ env.REGISTRY_IMAGE }}; do
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf "${registry}@sha256:%s " *)
          done

      - name: Inspect image
        run: |
          for registry in ${{ env.REGISTRY_IMAGE }}; do
          docker buildx imagetools inspect ${registry}:${{ steps.meta.outputs.version }}
          done
      # - name: Add image URL to summary
      #   run: |
      #     cat >> $GITHUB_STEP_SUMMARY <<EOF
      #     ## 🐳 Docker Image Published

      #     Multi-architecture image built for: **linux/amd64**, **linux/arm64**

      #     ### Tags:
      #     \`\`\`
      #     ${{ steps.meta.outputs.tags }}
      #     \`\`\`

      #     ### Pull command:
      #     \`\`\`bash
      #     docker pull $(echo '${{ steps.meta.outputs.tags }}' | head -n1)
      #     \`\`\`

      #     ### Run command:
      #     \`\`\`bash
      #     docker run --rm -it $(echo '${{ steps.meta.outputs.tags }}' | head -n1)
      #     \`\`\`
      #     EOF
